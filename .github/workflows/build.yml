name: Build Multi-Platform Executables

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

# 添加权限设置
permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ["3.11"]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install macOS dependencies
      if: runner.os == 'macOS'
      shell: bash
      run: brew install pkg-config libffi
      
    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev libxkbcommon-x11-0

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt5 pyinstaller

    - name: Embed resources
      run: python embed_resources.py

    - name: Verify qt_plugins exists
      run: |
        echo "验证 qt_plugins 目录..."
        if [ -d "qt_plugins" ]; then
          echo "qt_plugins 目录存在"
          echo "目录内容:"
          ls -lR qt_plugins || echo "目录列表失败"
        else
          echo "错误: qt_plugins 目录不存在!"
          exit 1
        fi
      shell: bash

    # macOS 构建
    - name: Build on macOS
      if: runner.os == 'macOS'
      shell: bash
      run: |
        PROJECT_ROOT=$(pwd)
        pyinstaller --onedir --windowed \
          --name HiveToCKConverter \
          --add-data "$PROJECT_ROOT/qt_plugins:qt_plugins" \
          --osx-bundle-identifier "com.example.HiveToCKConverter" \
          app.py
        # 为发布准备 zip 包
        cd dist
        zip -r HiveToCKConverter-macOS.zip HiveToCKConverter.app
        cd ..
        echo "asset_name=HiveToCKConverter-macOS.zip" >> $GITHUB_OUTPUT

    # Windows 构建
    - name: Build on Windows
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        $PROJECT_ROOT = Get-Location
        pyinstaller --onefile --windowed --name HiveToCKConverter --add-data "$PROJECT_ROOT\qt_plugins;qt_plugins" app.py
        # 为发布准备 zip 包
        Compress-Archive -Path dist\HiveToCKConverter.exe -DestinationPath dist\HiveToCKConverter-Windows.zip
        echo "asset_name=HiveToCKConverter-Windows.zip" >> $env:GITHUB_OUTPUT

    # Linux 构建
    - name: Build on Linux
      if: runner.os == 'Linux'
      shell: bash
      run: |
        PROJECT_ROOT=$(pwd)
        pyinstaller --onefile --name HiveToCKConverter --add-data "$PROJECT_ROOT/qt_plugins:qt_plugins" app.py
        # 为发布准备 zip 包
        cd dist
        zip HiveToCKConverter-Linux.zip HiveToCKConverter
        cd ..
        echo "asset_name=HiveToCKConverter-Linux.zip" >> $GITHUB_OUTPUT

    # 工件上传
    - name: Upload macOS artifact
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: HiveToCKConverter-macOS
        path: dist/HiveToCKConverter-macOS.zip

    - name: Upload Windows artifact
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: HiveToCKConverter-Windows
        path: dist/HiveToCKConverter-Windows.zip

    - name: Upload Linux artifact
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v4
      with:
        name: HiveToCKConverter-Linux
        path: dist/HiveToCKConverter-Linux.zip

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 30

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        pattern: 'HiveToCKConverter-*'

    - name: List downloaded artifacts
      run: |
        echo "下载的工件内容:"
        ls -lR artifacts
      shell: bash

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_id }}
        name: Release v${{ github.run_id }}
        body: |
          Multi-platform build for:
          - Windows
          - macOS
          - Linux
        files: |
          artifacts/HiveToCKConverter-macOS/HiveToCKConverter-macOS.zip
          artifacts/HiveToCKConverter-windows/HiveToCKConverter-Windows.zip
          artifacts/HiveToCKConverter-linux/HiveToCKConverter-Linux.zip
